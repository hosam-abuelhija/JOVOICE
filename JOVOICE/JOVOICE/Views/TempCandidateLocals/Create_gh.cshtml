@model JOVOICE.Models.TempCandidateLocalsViewModel
@{
    ViewBag.Title = "الترشح للقائمة المحلية";
    Layout = "~/Views/Shared/_LayoutPage1gh.cshtml";
}

<head>
    <style>
        body {
            font-family: 'Lato', sans-serif;
        }

        h1 {
            margin-bottom: 40px;
        }

        input,
        textarea {
            text-align: right;
            margin-bottom: 20px;
        }

        label {
            color: #333;
            display: block;
            text-align: right;
        }

        .btn-send {
            font-weight: 300;
            text-transform: uppercase;
            letter-spacing: 0.05em;
            width: 100%;
            margin-left: 3px;
        }

        .btn-success {
            background-color: #e02454;
            border-color: #e02454;
            border-radius: 50rem;
        }

            .btn-success:hover {
                background-color: #003a66;
                border-color: #ff5050;
            }

        .help-block.with-errors {
            color: #ff5050;
            margin-top: 5px;
        }

        .card {
            margin-left: 10px;
            margin-right: 10px;
        }

        th, td, select {
            text-align: right;
        }
    </style>
</head>


<div class="container-fluid service overflow-hidden py-5">
    <div class="container py-5">
        <div class="section-title text-center mb-5 wow fadeInUp" data-wow-delay="0.1s">
            <div class="sub-style">
                <h5 class="sub-title text-primary px-3">طلب الترشح للقوائم المحلية</h5>
            </div>
            <h1 class="display-5 mb-4">نموذج تقديم طلب الترشح للقوائم المحلية</h1>
            <p class="mb-0">
                نحن هنا لتقديم الدعم الكامل في عملية الترشح للقوائم المحلية في الانتخابات النيابية الأردنية.
                يمكنك ملء النموذج أدناه لتقديم طلبك والترشح بنجاح ضمن القوائم المحلية
            </p>
        </div>

        <div class="container">
            <div class="row">
                <div class="col-lg-12 mx-auto">
                    <div class="card mt-2 mx-auto p-4 bg-light">
                        <div class="card-body bg-light">


                            @using (Html.BeginForm("Create_gh", "TempCandidateLocals", FormMethod.Post, new { @class = "form-horizontal" }))
                            {
                                @Html.AntiForgeryToken()

                                <div class="controls">
                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.ListName, "اسم القائمة", new { @class = "control-label" })
                                                @Html.EditorFor(m => m.ListName, new { htmlAttributes = new { @class = "form-control", placeholder = "يرجى إدخال اسم القائمة" } })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.ElectionArea, "الدائرة الانتخابية", new { @class = "control-label" })
                                                @Html.EditorFor(m => m.ElectionArea, new { htmlAttributes = new { @class = "form-control", id = "electionAreaInput", placeholder = "يرجى إدخال الدائرة الانتخابية" } })
                                                @Html.DropDownListFor(m => m.ElectionArea, Enumerable.Empty<SelectListItem>(), new { @class = "form-control", id = "electionAreaDropdown", style = "display:none;" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.City, "المحافظة", new { @class = "control-label" })
                                                @Html.DropDownListFor(
                                                    m => m.City,
                                                    new SelectList(new List<SelectListItem>
                                                    {
                                                        new SelectListItem { Text = "إختر المحافظة", Value = "" },
                                                        new SelectListItem { Text = "إربد", Value = "إربد" },
                                                        new SelectListItem { Text = "المفرق", Value = "المفرق" },
                                                        new SelectListItem { Text = "عجلون", Value = "عجلون" },
                                                        new SelectListItem { Text = "جرش", Value = "جرش" },
                                                        new SelectListItem { Text = "البلقاء", Value = "البلقاء" },
                                                        new SelectListItem { Text = "مادبا", Value = "مادبا" },
                                                        new SelectListItem { Text = "الكرك", Value = "الكرك" },
                                                        new SelectListItem { Text = "الطفيلة", Value = "الطفيلة" },
                                                        new SelectListItem { Text = "معان", Value = "معان" },
                                                        new SelectListItem { Text = "العقبة", Value = "العقبة" },
                                                        new SelectListItem { Text = "الزرقاء", Value = "الزرقاء" },
                                                        new SelectListItem { Text = "عمان", Value = "عمان" }
                                                    }, "Value", "Text", Model.City),
                                                    new { @class = "form-control", id = "cityDropdown" }
                                                )
                                            </div>
                                        </div>
                                    </div>

                                </div>

                                <div class="row mt-4">
                                    <div class="col-md-12">
                                        <div class="table-responsive">
                                            <table class="table table-bordered">
                                                <thead>
                                                    <tr>
                                                        <th>البريد الإلكتروني</th>
                                                        <th>تاريخ الميلاد</th>
                                                        <th>الديانة</th>
                                                        <th>الجنس</th>
                                                        <th>الرقم الوطني</th>
                                                        <th>الاسم</th>
                                                        <th>التسلسل</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @for (int i = 0; i < Model.Candidates.Count; i++)
                                                    {
                                                        <tr>
                                                            <td>
                                                                <div class="form-group">
                                                                    @Html.EditorFor(m => m.Candidates[i].email, new { htmlAttributes = new { @class = "form-control", placeholder = "البريد الإلكتروني" } })
                                                                    @Html.ValidationMessageFor(m => m.Candidates[i].email, "", new { @class = "text-danger" })
                                                                </div>
                                                            </td>
                                                            <td>
                                                                <div class="form-group">
                                                                    @Html.EditorFor(m => m.Candidates[i].birthdate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                                                                    @Html.ValidationMessageFor(m => m.Candidates[i].birthdate, "", new { @class = "text-danger" })
                                                                </div>
                                                            </td>
                                                            <td>
                                                                <div class="form-group">
                                                                    @Html.DropDownList($"Candidates[{i}].religion", new SelectList(new List<SelectListItem>
                                                                    {
                                                                        new SelectListItem { Text = "اختر الديانة", Value = "", Disabled = true },
                                                                        new SelectListItem { Text = "مسلم", Value = "مسلم" },
                                                                        new SelectListItem { Text = "مسيحي", Value = "مسيحي" },
                                                                    }, "Value", "Text", Model.Candidates[i].religion), new { @class = "form-control" })
                                                                    @Html.ValidationMessageFor(m => m.Candidates[i].religion, "", new { @class = "text-danger" })
                                                                </div>
                                                            </td>
                                                            <td>
                                                                <div class="form-group">
                                                                    @Html.DropDownList($"Candidates[{i}].gender", new SelectList(new List<SelectListItem>
                                                                    {
                                                                        new SelectListItem { Text = "اختر الجنس", Value = "", Disabled = true },
                                                                        new SelectListItem { Text = "ذكر", Value = "ذكر" },
                                                                        new SelectListItem { Text = "أنثى", Value = "أنثى" }
                                                                    }, "Value", "Text", Model.Candidates[i].gender), new { @class = "form-control" })
                                                                    @Html.ValidationMessageFor(m => m.Candidates[i].gender, "", new { @class = "text-danger" })
                                                                </div>
                                                            </td>
                                                            <td>
                                                                <div class="form-group">
                                                                    @Html.EditorFor(m => m.Candidates[i].national_id, new { htmlAttributes = new { @class = "form-control", placeholder = "الرقم الوطني" } })
                                                                    @Html.ValidationMessageFor(m => m.Candidates[i].national_id, "", new { @class = "text-danger" })
                                                                </div>
                                                            </td>
                                                            <td>
                                                                <div class="form-group">
                                                                    @Html.EditorFor(m => m.Candidates[i].name, new { htmlAttributes = new { @class = "form-control", placeholder = "الاسم" } })
                                                                    @Html.ValidationMessageFor(m => m.Candidates[i].name, "", new { @class = "text-danger" })
                                                                </div>
                                                            </td>
                                                            <td>@(i + 1)</td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <button id="sendBtn" type="submit" class="btn btn-success btn-send pt-2 btn-block">إرسال النموذج</button>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div> <!-- /.8 -->
                </div> <!-- /.row-->
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var cityDropdown = document.getElementById('cityDropdown');
            var electionAreaInput = document.getElementById('electionAreaInput');
            var electionAreaDropdown = document.getElementById('electionAreaDropdown');
            var candidateRows = document.querySelectorAll('tbody tr');
            var nationalIdInputs = document.querySelectorAll('input[name$="national_id"]');

            var electionAreas = {
                "إربد": [
                    { Text: "إربد الأولى", Value: "إربد الأولى", MaxCandidates: 10 },
                    { Text: "إربد الثانية", Value: "إربد الثانية", MaxCandidates: 10 }
                ],
                "المفرق": [
                    { Text: "المفرق", Value: "المفرق", MaxCandidates: 10 }
                ]
            };

            function updateCandidateRows(maxCandidates) {
                candidateRows.forEach(function (row, index) {
                    if (index < maxCandidates) {
                        row.style.display = '';
                        row.querySelectorAll('input, select').forEach(function (input) {
                            input.required = true;
                            input.disabled = false;
                        });
                    } else {
                        row.style.display = 'none';
                        row.querySelectorAll('input, select').forEach(function (input) {
                            input.required = false;
                            input.disabled = true;
                        });
                    }
                });
            }

            function checkDuplicateNationalIds() {
                var ids = [];
                var hasDuplicate = false;

                nationalIdInputs.forEach(function (input) {
                    if (input.value && ids.includes(input.value)) {
                        hasDuplicate = true;
                        alert("الرقم الوطني موجود بالفعل.");
                        input.value = '';
                    } else {
                        ids.push(input.value);
                    }
                });

                return hasDuplicate;
            }

            electionAreaDropdown.addEventListener('change', function () {
                var selectedArea = electionAreaDropdown.value;
                var maxCandidates = 10;

                Object.values(electionAreas).forEach(function (areas) {
                    areas.forEach(function (area) {
                        if (area.Value === selectedArea) {
                            maxCandidates = area.MaxCandidates;
                        }
                    });
                });

                updateCandidateRows(maxCandidates);
            });

            cityDropdown.addEventListener('change', function () {
                var selectedCity = cityDropdown.value;

                if (electionAreas[selectedCity]) {
                    var options = electionAreas[selectedCity].map(function (area) {
                        return new Option(area.Text, area.Value);
                    });

                    electionAreaDropdown.innerHTML = '';
                    options.forEach(function (option) {
                        electionAreaDropdown.add(option);
                    });

                    electionAreaDropdown.style.display = 'block';
                    electionAreaInput.style.display = 'none';
                } else {
                    electionAreaDropdown.style.display = 'none';
                    electionAreaInput.style.display = 'block';
                }
            });

            nationalIdInputs.forEach(function (input) {
                input.addEventListener('change', checkDuplicateNationalIds);
            });
        });

    </script>
}






